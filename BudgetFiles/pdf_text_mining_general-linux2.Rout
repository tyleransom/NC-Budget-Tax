
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(list = ls())
> cat("\014") 
> 
> # Script to install and run tabulizer to extract tables from PDFs 
> 
> # packages necessary to install and run tabulizer. I had to install a different version of Java, which you may have to do as well. 
> # require(devtools)
> require(rJava)
Loading required package: rJava
> require(tabulizer)
Loading required package: tabulizer
> 
> generator <- function(fname,year1){
+   a <- get_n_pages(file=fname)
+   year2 <- year1+1
+   
+   #-------------------------------------ODD
+    Genout1 <- as.data.frame(extract_tables(fname, pages = 1, guess = FALSE, method = "data.frame", columns = list(c(320, 420)), stringsAsFactors=FALSE))
+     for (i in 2:a) {
+       try({
+         Out <- as.data.frame(extract_tables(fname, pages = i, guess = FALSE, method = "data.frame", columns = list(c(320, 420)), stringsAsFactors=FALSE))
+         names(Out) <- names(Genout1)
+         Genout1 <- rbind(Genout1,Out)
+       })
+     }
+     
+     
+     Genout1 <- as.data.frame(Genout1[!(as.data.frame(substr(Genout1[,1],1,1)) == "-"), ], stringsAsFactors=FALSE)
+     
+     Genout2=Genout1
+     Gen2 <- as.data.frame(gsub("TOTAL", "00001 TOTAL", Genout2[,1]), stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen2, Genout2[,2:3])
+     
+     Gen2 <- as.data.frame(gsub("NET", "00002 NET", Gen3[,1]), stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen2, Gen3[,2:3])
+     
+     Gen2 <- as.data.frame(gsub("HIGHWAY FUND APPROPRIATION", "00003 HIGHWAY FUND APPROPRIATION", Gen3[,1]), stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen2, Gen3[,2:3])
+     
+     Gen2 <- as.data.frame(gsub("HIGHWAY TRUST FUND APPROPRTN", "00004 HIGHWAY TRUST FUND APPROPRTN", Gen3[,1]), stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen2, Gen3[,2:3])
+     
+     Gen2 <- as.data.frame(gsub("CHANGE IN FUND BALANCE", "00005 CHANGE IN FUND BALANCE", Gen3[,1]),stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen2, Gen3[,2:3])
+     
+     Gen3 <- as.data.frame(Gen3[!(as.data.frame(substr(Gen3[,3],1,4)) == "PAGE"), ],stringsAsFactors=FALSE)
+     Gen3 <- as.data.frame(Gen3[!(substr(Gen3[,1],1,3) %in% c("APP", "BUD", "REQ", "DES", "EST", "POS", "SUM")), ],stringsAsFactors=FALSE)
+     Gen3 <- as.data.frame(Gen3[!(substr(Gen3[,3],1,3) %in% "AWG"), ],stringsAsFactors=FALSE)
+     
+     Gen2 <- as.data.frame(gsub(",","",Gen3[,2]),stringsAsFactors=FALSE)
+     Gen42 <- as.data.frame(gsub(",","",Gen3[,3]),stringsAsFactors=FALSE)
+     Gen3 <- cbind(Gen3[,1], Gen2, Gen42)
+     Gen3 <- Gen3[!apply(Gen3 == "", 1, all),]
+     Gen3 <- Gen3
+     
+     Gen3 <- cbind(as.data.frame(gsub("  "," ",Gen3[,1]), stringsAsFactors=FALSE),Gen3[,2:3])
+     
+     is.number <- function(x) grepl("[[:digit:]]", x)
+     
+     L=rep(0,length(Gen3[,1]))
+     for (j in 1:12){
+       k <- as.data.frame(substr(Gen3[,1],j,j),stringsAsFactors=FALSE)
+       for (i in 1:length(k[,1])){
+         if(is.number(k[i,1])==TRUE){L[i]=j}
+       }}
+     
+     is.space <- function(x) grepl(" ", x)
+     numbersnew=rep(0,length(L))
+     lettersnew=c()
+     h=matrix(0,length(L),3)
+     
+     for (i in 1:length(L)){
+       numbersnew[i]=as.data.frame(substr(Gen3[i,1],1,L[i]),stringsAsFactors=FALSE)
+       
+       lettersnew[i] <- as.data.frame(substr(Gen3[i,1],L[i]+1,100),stringsAsFactors=FALSE)
+       for (j in 1:3){
+         if(is.space(substr(lettersnew[i],j,j))==TRUE){
+           h[i,j]=1
+         }
+       }
+       lettersnew[i] <- as.data.frame(substr(Gen3[i,1],L[i]+1+sum(h[i,]),100),stringsAsFactors=FALSE)
+     }
+     
+     w <- cbind(numbersnew,lettersnew)
+     Genfin <- cbind(w, Gen3[,2:3])
+     Genfin <- Genfin[!(Genfin[,1]==""),]
+     Y <- as.data.frame(gsub("[^0-9]", "", Genfin[,1]),stringsAsFactors=FALSE)
+     Genfin <- cbind (Y, Genfin[,2:length(Genfin)])
+     
+     M1 <- intersect(which(as.numeric(Genfin[,3])<0),which(!Genfin[,3]==""))
+     M2 <- intersect(which(as.numeric(Genfin[,4])<0),which(!Genfin[,4]==""))
+     R1 <- as.data.frame(gsub("[^0-9]", "", Genfin[,3]),stringsAsFactors=FALSE)
+     R2 <- as.data.frame(gsub("[^0-9]", "", Genfin[,4]),stringsAsFactors=FALSE)
+     R1[M1,] <- paste("-",R1[M1,],sep = "")
+     R2[M2,] <- paste("-",R2[M2,],sep = "")
+    
+     for (i in 2:10){
+     D1=rep(0,length(Genfin[,3]))
+     D2=rep(0,length(Genfin[,3]))
+     D1 [which(substr(Genfin[,3],i,i)==".")] <- which(substr(Genfin[,3],i,i)==".")
+     D1 <- D1[!(D1==0)]
+     D2 [which(substr(Genfin[,4],i,i)==".")] <- which(substr(Genfin[,4],i,i)==".")
+     D2 <- D2[!(D2==0)]
+     R1[D1,] <- paste(substr(R1[D1,],1,i-1),substr(R1[D1,],i,15),sep = ".")
+     R2[D2,] <- paste(substr(R2[D2,],1,i-1),substr(R2[D2,],i,15),sep = ".")
+     }
+     
+     Genfin <- cbind(Genfin[,1:2],R1,R2)
+     J <- !((as.data.frame(substr(Genfin[,1],1,1)) == "") & (as.data.frame(substr(Genfin[,3],1,1) == "")))
+     Genfin <- as.data.frame(Genfin[J, ], stringsAsFactors=FALSE)
+     
+     
+     colnames(Genfin) <- c("SubsecID","Description",year1,year2)
+     Genfin$SubsecID  <- as.numeric(Genfin$SubsecID)
+     Genfin[,3]   <- type.convert(Genfin[,3], numerals="warn.loss");
+     Genfin[,4]   <- type.convert(Genfin[,4], numerals="warn.loss");
+   
+   #indices with 5 digit indices
+   M <- which(is.na(Genfin[,3]))
+   N <- intersect(which(!substr(Genfin[,1],5,5) %in% ""),M)
+   
+   #indices for 2nd NA
+   T <- setdiff(M,N)
+   
+   n <- length(Genfin[,1])
+   O1 <- rep(0,n)
+   O2 <- rep(0,n)
+   
+   
+   for (i in 1:length(N)){
+     O1[N[i]:n]=Genfin[N[i],1]
+   }
+   O1 <- O1[-which(is.na(Genfin[,3]))]
+   
+   for (i in 1:length(T)){
+     O2[T[i]:n]=Genfin[T[i],1]
+   }
+   O2 <- O2[-which(is.na(Genfin[,3]))]
+   
+   O <- cbind(O1,O2)
+   Genfin <- as.data.frame(Genfin[-(which(is.na(Genfin[,3]))), ])
+   colnames(O) <- c("Supercode1","Supercode2")
+   Genfin <- cbind(O,Genfin)
+   
+   
+  tot1 <- which(substr(Genfin$Description,1,5) %in% "TOTAL")
+  net2 <- which(substr(Genfin$Description,1,3) %in% "NET")
+  hfa3 <- which(Genfin$Description=="HIGHWAY FUND APPROPRIATION")
+  htf4 <- which(Genfin$Description=="HIGHWAY TRUST FUND APPROPRTN")
+  cfb5 <- which(Genfin$Description=="CHANGE IN FUND BALANCE")
+ 
+  C3 <- Genfin$SubsecID
+  C3[tot1] <- paste(Genfin$Supercode1[tot1],Genfin$SubsecID[tot1],sep = "")
+  C3[net2] <- paste(Genfin$Supercode1[net2],Genfin$SubsecID[net2],sep = "")
+  C3[hfa3] <- paste(Genfin$Supercode1[hfa3],Genfin$SubsecID[hfa3],sep = "")
+  C3[htf4] <- paste(Genfin$Supercode1[htf4],Genfin$SubsecID[htf4],sep = "")
+  C3[cfb5] <- paste(Genfin$Supercode1[cfb5],Genfin$SubsecID[cfb5],sep = "")
+  
+  Genfin$SubsecID <- C3
+  Genfin <- Genfin[!duplicated(Genfin),]
+  Genfin[which(Genfin$Description==""),4] <- "ESTIMATED RECEIPTS MISSING"
+  return(Genout2)
+ }
> 
> #for now the function ends here
> 
> # vol12003 <- generator("2003_5/vol1.pdf")
> # vol12005 <- generator("2005_7/vol1.pdf")
> # vol12007 <- generator("2007_9/vol1.pdf")
> # vol12009 <- generator("2009_11/vol1.pdf")
> # vol12011 <- generator("2011_13/vol1.pdf")
> 
> # vol22003 <- generator("2003_5/vol2.pdf")
> # vol22005 <- generator("2005_7/vol2.pdf")
> # vol22007 <- generator("2007_9/vol2.pdf")
> # vol22009 <- generator("2009_11/vol2.pdf")
> # vol22011 <- generator("2011_13/vol2.pdf")
> 
> # vol32003 <- generator("2003_5/vol3.pdf")
> # vol32005 <- generator("2005_7/vol3.pdf")
> # vol32007 <- generator("2007_9/vol3.pdf")
> # vol32009 <- generator("2009_11/vol3.pdf")
> # vol32011 <- generator("2011_13/vol3.pdf")
> 
> # vol42003 <- generator("2003_5/vol4.pdf")
> # vol42005 <- generator("2005_7/vol4.pdf")
> # vol42007 <- generator("2007_9/vol4.pdf")
> # vol42009 <- generator("2009_11/vol4.pdf")
> # vol42011 <- generator("2011_13/vol4.pdf")
> 
> # vol52003 <- generator("2003_5/vol5.pdf")
> # vol52005 <- generator("2005_7/vol5.pdf")
> # vol52007 <- generator("2007_9/vol5.pdf")
> # vol52009 <- generator("2009_11/vol5.pdf")
> # vol52011 <- generator("2011_13/vol5.pdf")
> 
> # temp<-getwd()
> vol62003 <- generator("http://ncosbm.s3.amazonaws.com/s3fs-public/6200305_BD307_Vol6.pdf",2003)
> vol62005 <- generator("http://ncosbm.s3.amazonaws.com/s3fs-public/6a200507_BD307_Vol6.pdf",2005)
> vol62007 <- generator("http://ncosbm.s3.amazonaws.com/s3fs-public/200709_BD307_Vol6.pdf",2007)
> vol62009 <- generator("http://ncosbm.s3.amazonaws.com/s3fs-public/BD307_2009-11_Vol6.pdf",2009)
> vol62011 <- generator("http://ncosbm.s3.amazonaws.com/s3fs-public/2011-BD307-V6.pdf",2011)
> 
> save(vol62003,file=paste0("RdaFiles/vol62003.Rda"))
> save(vol62005,file=paste0("RdaFiles/vol62005.Rda"))
> save(vol62007,file=paste0("RdaFiles/vol62007.Rda"))
> save(vol62009,file=paste0("RdaFiles/vol62009.Rda"))
> save(vol62011,file=paste0("RdaFiles/vol62011.Rda"))
> 
> proc.time()
    user   system  elapsed 
1033.502   82.174 1059.661 
